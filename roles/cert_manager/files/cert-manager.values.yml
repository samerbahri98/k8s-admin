---
installCRDs: true
prometheus:
  enabled: false
  servicemonitor:
    enabled: false
    prometheusInstance: default
    targetPort: 9402
    path: /metrics
    interval: 60s
    scrapeTimeout: 30s
    labels: {}
    honorLabels: false
affinity: {}
tolerations: []
webhook:
  replicaCount: 1
  timeoutSeconds: 10
  config:
  strategy: {}
  securityContext:
    runAsNonRoot: true
  containerSecurityContext:
    allowPrivilegeEscalation: false
  extraArgs: []
  resources: {}
  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  nodeSelector:
    kubernetes.io/os: linux
  affinity: {}
  tolerations: []
  podLabels: {}
  serviceLabels: {}
  image:
    repository: quay.io/jetstack/cert-manager-webhook
    pullPolicy: IfNotPresent
  serviceAccount:
    create: true
    automountServiceAccountToken: true
  securePort: 10250
  hostNetwork: false
  serviceType: ClusterIP
  url: {}
cainjector:
  enabled: true
  replicaCount: 1
  strategy: {}
  securityContext:
    runAsNonRoot: true
  containerSecurityContext:
    allowPrivilegeEscalation: false
  extraArgs: []
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  affinity: {}
  tolerations: []
  podLabels: {}
  image:
    repository: quay.io/jetstack/cert-manager-cainjector
    pullPolicy: IfNotPresent
  serviceAccount:
    create: true
    automountServiceAccountToken: true
startupapicheck:
  enabled: true
  securityContext:
    runAsNonRoot: true
  containerSecurityContext:
    allowPrivilegeEscalation: false
  timeout: 1m
  backoffLimit: 4
  jobAnnotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  extraArgs: []
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  affinity: {}
  tolerations: []
  podLabels: {}
  image:
    repository: quay.io/jetstack/cert-manager-ctl
    pullPolicy: IfNotPresent
  rbac:
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-weight: "-5"
      helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  serviceAccount:
    create: true
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-weight: "-5"
      helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    automountServiceAccountToken: true
