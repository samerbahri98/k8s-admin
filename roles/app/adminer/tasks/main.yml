---
- name: NAMESPACE | PRESENT
  kubernetes.core.k8s:
    api_version: v1
    kind: namespace
    name: "{{ namespace }}"
    state: "{{ state }}"
  when:
    - state == "present"
- name: DEPLOYMENT | PRESENT
  kubernetes.core.k8s:
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: adminer
        labels:
          app.kubernetes.io/instance: adminer
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/instance: adminer
        template:
          metadata:
            labels:
              app.kubernetes.io/instance: adminer
          spec:
            containers:
              - name: adminer
                image: adminer:standalone
                resources:
                  limits:
                    memory: "128Mi"
                    cpu: "20m"
                ports:
                  - containerPort: 8080
  when:
    - state == "present"
- name: SERVICE | PRESENT
  kubernetes.core.k8s:
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app.kubernetes.io/instance: adminer
        name: adminer
      spec:
        selector:
          app.kubernetes.io/instance: adminer
        ports:
          - name: http
            port: 8080
            targetPort: 8080
            protocol: TCP
        type: ClusterIP
  when:
    - state == "present"
- name: INGRESS | PRESENT
  kubernetes.core.k8s:
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          kubernetes.io/ingress.class: nginx
        labels:
          app.kubernetes.io/instance: adminer
          app.kubernetes.io/name: adminer
        name: adminer
      spec:
        ingressClassName: nginx
        rules:
          - host: "{{ hostname }}"
            http:
              paths:
                - backend:
                    service:
                      name: adminer
                      port:
                        number: 8080
                  path: /
                  pathType: Prefix
        tls:
          - hosts:
              - "{{ cert_hostname }}"
            secretName: "{{ cert_secret }}"
  when:
    - state == "present"
- name: NAMESPACE | ABSENT
  kubernetes.core.k8s:
    api_version: v1
    kind: namespace
    name: "{{ namespace }}"
    state: "{{ state }}"
  when:
    - state == "absent"
